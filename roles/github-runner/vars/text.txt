
- name: Ensure runner user exists (non-sudo)
  ansible.builtin.user:
    name: "{{ runner_user }}"
    shell: /bin/bash
    create_home: yes

- name: Create runner directory
  ansible.builtin.file:
    path: "{{ runner_dir }}"
    state: directory
    owner: "{{ runner_user }}"
    group: "{{ runner_user }}"
    mode: '0755'

- name: Install GitHub runner dependencies
  ansible.builtin.dnf:
    name:
      - libicu
      - curl
      - tar
      - xz
      - zlib
      - glibc
      - jq
      - git
    state: present

- name: Download and extract GitHub Runner
  ansible.builtin.unarchive:
    src: "https://github.com/actions/runner/releases/download/v{{ runner_version }}/actions-runner-linux-x64-{{ runner_version }}.tar.gz"
    dest: "{{ runner_dir }}"
    remote_src: yes
    owner: "{{ runner_user }}"
    group: "{{ runner_user }}"

- name: Grab registration token from GitHub (org level)
  ansible.builtin.shell: |
    gh api --method POST \
      -H 'Accept: application/vnd.github+json' \
      -H 'X-GitHub-Api-Version: 2022-11-28' \
      orgs/{{ org_name }}/actions/runners/registration-token | jq -r .token
  register: runner_token
  become_user: ec2-user

- name: Check if runner already configured
  ansible.builtin.stat:
    path: "{{ runner_dir }}/.runner"
  register: runner_config

- name: Configure GitHub Runner
  ansible.builtin.shell: >
    ./config.sh
    --url https://github.com/{{ org_name }}
    --token {{ runner_token.stdout }}
    --runnergroup "{{ runner_group }}"
    --name "{{ runner_name }}"
    --labels "{{ runner_labels }}"
    --work _work
    --replace
    --unattended
  args:
    chdir: "{{ runner_dir }}"
  become_user: "{{ runner_user }}"
  when: not runner_config.stat.exists

# Check if GitHub Runner service already exists
- name: Check if GitHub Runner service file exists
  ansible.builtin.stat:
    path: "/etc/systemd/system/actions.runner.Batch02-2025-tools-automation-code.myrunner.service"
  register: runner_service_file
  become: yes

# Install service (needs root)
- name: Install GitHub Runner service (requires sudo)
  ansible.builtin.shell: |
    ./svc.sh install
  args:
    chdir: "{{ runner_dir }}"
  become: yes
  become_user: root
  when: not runner_service_file.stat.exists

# Fix service file to run as 'grunner'
- name: Ensure GitHub Runner service runs as correct user
  ansible.builtin.replace:
    path: "/etc/systemd/system/actions.runner.*.service"
    regexp: '^User=.*'
    replace: "User={{ runner_user }}"
  become: yes
  ignore_errors: yes

# Reload systemd to pick up the change
- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes
  become: yes

# Start the service as the runner user
- name: Start GitHub Runner service (as runner user)
  ansible.builtin.shell: |
    ./svc.sh start
  args:
    chdir: "{{ runner_dir }}"
  become: yes
  become_user: "{{ runner_user }}"
  ignore_errors: yes

- name: Ensure runner service is enabled at boot
  ansible.builtin.systemd:
    name: "actions.runner.{{ org_name }}*.{{ runner_name }}.service"
    enabled: true
    state: started
  become: yes
  ignore_errors: yes