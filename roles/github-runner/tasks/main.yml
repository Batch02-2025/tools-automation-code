# Following steps need to be run manually
# sudo curl -L -o /etc/yum.repos.d/gh-cli.repo https://cli.github.com/packages/rpm/gh-cli.repo
# sudo dnf install gh -y
# gh auth login -s admin:org

# - name: Set a hostname
#   ansible.builtin.hostname:
#     name: github-runner

- name: Add github Runner User
  ansible.builtin.user:
    name: grunner

- name: Create a Directory
  ansible.builtin.file:
    path: /actions-runner
    state: directory
    owner: grunner
    group: grunner

- name: Extract and download Github-runner
  ansible.builtin.unarchive:
    src: https://github.com/actions/runner/releases/download/v2.328.0/actions-runner-linux-x64-2.328.0.tar.gz
    dest: "/actions-runner"
    remote_src: yes
    owner: grunner
    group: grunner

- name: Grab a Token
  ansible.builtin.shell: |
    gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" orgs/Batch02-2025/actions/runners/registration-token | jq .token
  register: token
  become_user: ec2-user # fetch this token using ec2-user as its used for gh to login to github.

- name: Install GitHub runner dependencies
  ansible.builtin.dnf:
    name:
      - libicu
      - curl
      - tar
      - xz
      - zlib
      - glibc
    state: present

- name: Get the runner count
  ansible.builtin.shell:
#     cmd: gh api --method GET -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" orgs/Batch02-2025/actions/runners | jq '.runners | length'
    gh api orgs/Batch02-2025/actions/runners --jq '.total_count'
  register: runner_count
  become_user: ec2-user

- name: Get the runner Status
  ansible.builtin.shell:
    cmd: gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /orgs/Batch02-2025/actions/runners | jq '.runners[] | select(.name == "myrunner") | .status' |xargs
  register: runner_status
  become_user: ec2-user

- name: Configure the Github Runner
  ansible.builtin.shell: ./config.sh --url https://github.com/Batch02-2025/tools-automation-code --token {{ token.stdout }} --runnergroup Default --name myrunner --labels rhel --work _work --replace
  args:
    chdir: /actions-runner
  become: true
  become_user: grunner
  when: runner_count.stdout == "0" or runner_status.stdout == "offline"

- name: Update the path
  ansible.builtin.copy:
    src: path
    dest: /actions-runner/.path
    owner: grunner
    group: grunner
    mode: '0644'
  become: yes
  become_user: grunner
  when: runner_count.stdout == "0" or runner_status.stdout == "offline"

- name: Install Github Service
  ansible.builtin.shell: ./svc.sh install grunner; ./svc.sh start
  args:
    chdir: /actions-runner
    become_user: grunner
  when: runner_count.stdout == "0" or runner_status.stdout == "offline"

- name: Yum Utils Install
  ansible.builtin.shell: sudo yum install -y yum-utils
  args:
    chdir: /actions-runner
    become_user: grunner

- name: Copy the Terraform Repo File
  ansible.builtin.shell: sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
  args:
    chdir: /actions-runner
    become_user: grunner

- name: Install Terraform
  ansible.builtin.yum:
    name: terraform
    state: present

- name: Install python3.11-pip
  ansible.builtin.yum:
    name: python3.11-pip
    state: present

- name: Install Ansible using pip3.11
  ansible.builtin.pip:
    name: ansible
    executable: pip3.11



